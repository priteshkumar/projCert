- hosts: localhost
  gather_facts: no
  vars_files:
    - keys.yml
  tasks:
    - name: Provision instance
      ec2:
        aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
        ec2_region: "{{ AWS_REGION }}"
        instance_type: t2.micro
        keypair: jenkins
        image: ami-01ac791235afb7e2c
        volumes:
          - device_name: /dev/sda1
            snapshot: snap-00db30eee9e91f365
            volume_type: gp2
            volume_size: 20
            delete_on_termination: true
        assign_public_ip: yes
        vpc_subnet_id: subnet-13fab269
        group: jenkins
        wait: true
        exact_count: 1
        count_tag:
          Name: ec2-linuxtest
        instance_tags:
          Name: ec2-linuxtest
      register: ec2
    - debug:
        var: ec2
    - name: add host to inventory
      add_host:
        hostname: '{{ item.public_dns_name }}'
        groupname: jenkinstest
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: /home/jenkins/jenkins.pem.txt
      loop: '{{ ec2.instances }}'

- hosts: jenkinstest
  gather_facts: no
  remote_user: ubuntu
  become: yes
  tasks:
    - name: wait for SSH
      wait_for_connection:
        delay: 5
        timeout: 200

    - name: Check host status
      ping:
    - name: add ubuntu to sudo group
      user:
        name: ubuntu
        groups: sudo
        append: yes
    - name: allow ubuntu passwordless
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    - name: install pass
      apt:
        name: pass
        state: present
        update_cache: yes
      ignore_errors: yes
    - name: install unittest2
      pip:
        name: unittest2
    - name: install xml-reporting
      pip:
        name: unittest-xml-reporting
    - name: add ubuntu to docker group
      user:
        name: ubuntu
        append: yes
        groups: docker
    - name: add jenkins user
      user:
        name: jenkins
        append: yes
        groups: sudo,docker
    - name: add ssh path
      file:
        path: /home/jenkins/.ssh
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0700
      ignore_errors: yes
    - name: add ssh keys
      copy:
        src: /home/jenkins/authorized_keys
        dest: /home/jenkins/.ssh/authorized_keys
        force: yes
        owner: jenkins
        group: jenkins
        mode: 0600
    - name: add docker path
      file:
        path: /home/jenkins/.docker
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0700
    - name: add docker cred
      copy:
        src: /home/jenkins/config.json
        dest: /home/jenkins/.docker/config.json
        force: yes
        owner: jenkins
        group: jenkins
        mode: 0600
- hosts: jenkinstest
  gather_facts: no
  remote_user: jenkins
  become_user: jenkins
  tasks:
    - name: checkout projCert source
      git:
        repo: https://github.com/priteshkumar/projCert.git
        dest: /home/jenkins/workspace/projCert
        version: cm
    - name: get head sha1
      shell: git rev-parse --short HEAD
      args:
        chdir: /home/jenkins/workspace/projCert
      register: cmd_output
    - debug:
        var: cmd_output
    - name: build webapp docker image
      docker_image:
        state: present
        path: /home/jenkins/workspace/projCert
        name: mavpks/eduwebapp
        tag: '{{ cmd_output.stdout }}' 
    - name: run webapp docker container
      docker_container:
        name: eduwebapp
        image: "mavpks/eduwebapp:{{ cmd_output.stdout }}"
        ports:
          - "3000:80"
    - name: check webapp
      shell: curl localhost:3000
      register: webhome
      ignore_errors: yes
    - name: list docker webapp container
      shell: docker ps
      register: webd
    - debug:
        var: webd
    - debug:
        var: webhome
    - name: configure xvfb for selenium
      shell: Xvfb :99 &
      register: xvfbpid
    - debug:
        var: xvfbpid
    - name: set display env
      shell: export DISPLAY=:99
    - name: echo env
      shell: echo $DISPLAY
      register: envars
    - debug:
        var: envars
    - name: set docker imgtag
      shell: echo '{{ cmd_output.stdout }}' >> imgtag.txt
      args:
        chdir: /home/jenkins/workspace/projCert/tests
    - name: run selenium tests
      shell: python Seleniumtest.py
      args:
        chdir: /home/jenkins/workspace/projCert/tests
      register: testout
    - debug:
        var: testout
    - name: archieve test results
      archive:
        path: 
          - /home/jenkins/workspace/projCert/tests/*.png
          - /home/jenkins/workspace/projCert/tests/*.xml
          - /home/jenkins/workspace/projCert/tests/imgtag.txt
        dest: /home/jenkins/workspace/projCert/testresult.gz
        format: gz
    - name: push eduwebapp image to docker hub
      docker_image:
        name: mavpks/eduwebapp
        tag: '{{ cmd_output.stdout }}'
        push: yes
    - name: fetch test results
      fetch:
        src: /home/jenkins/workspace/projCert/testresult.gz
        dest: /var/lib/jenkins/jobs/pipelines/jobs/edureka/workspace/
        flat: yes
